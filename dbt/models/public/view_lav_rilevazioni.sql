{{
  config(
    materialized = 'view',
    schema = 'gold_layer'
    )
}}

WITH LLALL AS (
    SELECT
        AU.USER_ID AS ADDETTO_CODE,
        LL.PK,
        LL.ACTUALTIME_QTY,
        LL.CODICEBARRATURA_CODE,
        LL.CODICEMACROFASE_CODE,
        LL.CODICEMOTIVOECONOMIA_CODE,
        LL.CODICEOPERAZIONE_CODE,
        LL.DATAMATRIX_CODE,
        LL.DESCRIZIONEBARRATURA_DESC,
        LL.DESCRIZIONEMACROFASE_DESC,
        LL.DESCRIZIONEMOTIVOECONOMIA_DESC,
        LL.DESCRIZIONEOPERAZIONE_DESC,
        LL.ENDDATE_TSTAMP,
        LL.MOLTIPLICATORE_NUM,
        LL.STARTDATE_TSTAMP,
        LL.STATUS_TYPE,
        LL.TOTALTIME_QTY,
        LL.USERPK_CODE,
        LL.ORDERCODE_CODE,
        LL.POSTAZIONE_CODE,
        LL.CODICEREPARTO_CODE,
        LL.DESCRIZIONEREPARTO_DESC,
        LL.CENTROLAVOROCODE_CODE,
        LL.STABILIMENTOCODE_CODE,
        LL.REPARTOCODE_CODE AS REPARTO
    FROM {{ ref('loglavorazione_incremental') }} AS LL
    INNER JOIN {{ ref('users_incremental') }} AS AU
        ON LL.USERPK_CODE = AU.PK
    WHERE
        LL.STATUS_TYPE = "COMPLETED"
        AND AU.USER_ID IS NOT NULL
    UNION DISTINCT
    SELECT
        AU.USER_ID AS ADDETTO_CODE,
        LL.PK,
        LL.ACTUALTIME_QTY,
        LL.CODICEBARRATURA_CODE,
        LL.CODICEMACROFASE_CODE,
        LL.CODICEMOTIVOECONOMIA_CODE,
        LL.CODICEOPERAZIONE_CODE,
        LL.DATAMATRIX_CODE,
        LL.DESCRIZIONEBARRATURA_DESC,
        LL.DESCRIZIONEMACROFASE_DESC,
        LL.DESCRIZIONEMOTIVOECONOMIA_DESC,
        LL.DESCRIZIONEOPERAZIONE_DESC,
        LL.ENDDATE_TSTAMP,
        LL.MOLTIPLICATORE_NUM,
        LL.STARTDATE_TSTAMP,
        LL.STATUS_TYPE,
        LL.TOTALTIME_QTY,
        LL.USERPK_CODE,
        LL.ORDERCODE_CODE,
        LL.POSTAZIONE_CODE,
        LL.CODICEREPARTO_CODE,
        LL.DESCRIZIONEREPARTO_DESC,
        LL.CENTROLAVOROCODE_CODE,
        LL.STABILIMENTOCODE_CODE,
        LL.REPARTOCODE_CODE AS REPARTO
    FROM {{ ref('loglavorazione_incremental') }} AS LL
    INNER JOIN {{ ref('users_incremental') }} AS AU
        ON LL.USERPK_CODE = AU.PK
    WHERE
        LL.CODICEMOTIVOECONOMIA_CODE IS NOT NULL
        AND LL.STATUS_TYPE = "COMPLETED"
        AND AU.USER_ID IS NOT NULL
),

LLROWS AS (
    SELECT
        LLR.LOG_LAVORAZIONE_PK,
        MAX(LLR.CODICECICLO_CODE) AS CODICECICLO_CODE,
        MAX(LLR.PRODUCTDESCRIPTION_DESC) AS PRODUCTDESCRIPTION_DESC,
        MAX(LLR.PRODUCTCODE_CODE) AS PRODUCTCODE_CODE,
        SUM(LLR.TOTALTIME_QTY) AS TOTALTIME_QTY,
        COUNT(
            DISTINCT CONCAT(
                LL.ORDERCODE_CODE, "_", LLR.SIZE_VAL, "_", LLR.PROGRESSIVE_NUM
            )
        ) AS NUMEROCAPI_QTY,
        MAX(LLR.TEMPIMEDI_QTY) AS TEMPIMEDI_QTY
    FROM {{ ref('loglavorazionerow_incremental') }} AS LLR
    INNER JOIN {{ ref('loglavorazione_incremental') }} AS LL
        ON LLR.LOG_LAVORAZIONE_PK = LL.PK
    WHERE
        LL.STATUS_TYPE = "COMPLETED"
        AND LLR.STATUS_TYPE = "COMPLETED"
    GROUP BY LLR.LOG_LAVORAZIONE_PK
)

SELECT
    "TEMERA" AS SOURCE_,
    LL.CODICEMACROFASE_CODE AS FASE_CODE,
    LL.ADDETTO_CODE,
    LL.CODICEMOTIVOECONOMIA_CODE AS CODICE_ECONOMIA_CODE,
    LL.CODICEREPARTO_CODE AS REPARTO_CODE,
    LL.CODICEMACROFASE_CODE AS MACROFASE_CODE,
    LL.DESCRIZIONEMACROFASE_DESC AS DESCRIZIONE_MACROFASE_DESC,
    LL.ORDERCODE_CODE AS PACCO_COMMESSA_CODE,
    LLR.PRODUCTDESCRIPTION_DESC AS DESCRZIONE_MODELLO_DESC,
    LLR.PRODUCTCODE_CODE AS SKU_CODE,
    LL.MOLTIPLICATORE_NUM AS PRL_MOLTIPLICA_TEMPI_NUM,
    "M" AS UNITA_TEMPO_UOM,
    CAST(LL.STARTDATE_TSTAMP AS DATE) AS DATA_RILEVAZIONE_DATE,
    COALESCE(SPLIT(LL.CODICEOPERAZIONE_CODE, "-")[SAFE_OFFSET(0)], "")
        AS OPERAZIONE_CODE,
    COALESCE(SPLIT(LL.CODICEOPERAZIONE_CODE, "-")[SAFE_OFFSET(1)], "")
        AS BARRATURA_CODE,
    COALESCE(SPLIT(LL.CODICEOPERAZIONE_CODE, "-")[SAFE_OFFSET(2)], "")
        AS ASTERISCO_CODE,
    COALESCE(LLR.TEMPIMEDI_QTY, 0) AS TEMPO_UNITARIO_QTY,
    COALESCE(LLR.NUMEROCAPI_QTY, 0) AS CAPI_PRODOTTI_QTY,
    (COALESCE(LLR.TEMPIMEDI_QTY, 0) * COALESCE(LLR.NUMEROCAPI_QTY, 0))
        AS TEMPO_TOTALE_QTY,
    CASE WHEN LL.CODICEMOTIVOECONOMIA_CODE IS NOT NULL THEN "S" ELSE "" END
        AS ECONOMIA_CODE,
    CONCAT(
        FORMAT_DATETIME("%R", LL.STARTDATE_TSTAMP),
        " - ",
        COALESCE(FORMAT_DATETIME("%R", LL.ENDDATE_TSTAMP), "")
    ) AS ORARIO_TIME,
    LL.ACTUALTIME_QTY / 60.0 AS DURATA_EFFETTIVA_QTY,
    COALESCE(LLR.TOTALTIME_QTY, LL.TOTALTIME_QTY) / 60.0 AS DURATA_TOTALE_QTY
FROM LLALL AS LL
LEFT JOIN LLROWS AS LLR
    ON LL.PK = LLR.LOG_LAVORAZIONE_PK
